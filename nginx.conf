# Define user and worker processes for optimal performance
user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

# Error logging
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    # Optimized event handling for high performance
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    reset_timedout_connection on;
    server_tokens off;
    server_name_in_redirect off;
    types_hash_max_size 2048;
    
    # File handle caching
    open_file_cache max=20000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main buffer=16k;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting for API endpoints
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy (adjust based on your needs)
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval' blob:; 
        script-src 'self' https://unpkg.com https://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval'; 
        style-src 'self' https://cdnjs.cloudflare.com 'unsafe-inline'; 
        img-src 'self' data: blob: https:; 
        connect-src 'self' https://parseapi.back4app.com wss:;" always;
    
    # Cache zone for API responses
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m
                     inactive=60m use_temp_path=off;
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # Security - deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"OK","service":"VibeLink 0372","timestamp":"$time_iso8601"}';
        }
        
        # Service worker needs to be served from root path
        location /service-worker.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri $uri/ =404;
        }
        
        # Manifest needs fresh serving
        location /manifest.json {
            add_header Cache-Control "no-cache";
            try_files $uri $uri/ =404;
        }
        
        # API proxy for Back4App with caching and rate limiting
        location /parse/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Caching
            proxy_cache api_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            
            # Proxy settings
            proxy_pass https://parseapi.back4app.com/;
            proxy_set_header X-Parse-Application-Id 8fYdKoHo6nrYd3gZw2acyPlb9mWKQbb8BBOQRCse;
            proxy_set_header X-Parse-REST-API-Key xSatMs4hrQbw0PcGzXO1j8s76qoX3uUqfhfl59MQ;
            proxy_set_header X-Parse-Revocable-Session 1;
            proxy_set_header X-Parse-Master-Key $PARSE_MASTER_KEY;
            proxy_set_header Host parseapi.back4app.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Cache static assets with versioned filenames
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Don't set cookie for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Cache-Status $upstream_cache_status;
            }
        }
        
        # HTML files - no cache
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        
        # Serve static files with SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML content
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Enable CORS for all routes
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-Parse-Application-Id,X-Parse-REST-API-Key';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # HTTPS server (commented out but ready for production)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/ssl/certs/nginx.crt;
    #     ssl_certificate_key /etc/ssl/private/nginx.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_session_tickets off;
    #     
    #     # HSTS (uncomment for production)
    #     # add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # OCSP stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     
    #     # Use the same configuration as the HTTP server
    #     # ... (copy content from the HTTP server block)
    # }
}